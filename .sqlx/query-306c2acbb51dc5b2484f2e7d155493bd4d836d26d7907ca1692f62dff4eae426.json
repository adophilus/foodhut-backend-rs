{
  "db_name": "PostgreSQL",
  "query": "\n        WITH filtered_orders AS (\n            SELECT\n                orders.id,\n                orders.status,\n                orders.payment_method,\n                orders.delivery_fee,\n                orders.service_fee,\n                orders.sub_total,\n                orders.total,\n                orders.delivery_address,\n                orders.delivery_date,\n                orders.dispatch_rider_note,\n                orders.kitchen_id,\n                orders.owner_id,\n                orders.created_at,\n                orders.updated_at,\n                json_item AS item\n            FROM\n                orders,\n                JSON_ARRAY_ELEMENTS(orders.items) AS json_item\n            WHERE\n                orders.id = $1\n        ),\n        order_with_item AS (\n            SELECT\n                filtered_orders.id,\n                filtered_orders.status,\n                filtered_orders.payment_method,\n                filtered_orders.delivery_fee,\n                filtered_orders.service_fee,\n                filtered_orders.sub_total,\n                filtered_orders.total,\n                filtered_orders.delivery_address,\n                filtered_orders.delivery_date,\n                filtered_orders.dispatch_rider_note,\n                filtered_orders.kitchen_id,\n                filtered_orders.owner_id,\n                TO_JSONB(users) AS owner_info,\n                filtered_orders.created_at,\n                filtered_orders.updated_at,\n                filtered_orders.item::JSONB || JSONB_BUILD_OBJECT(\n                    'meal', meals\n                ) AS item,\n                TO_JSONB(kitchens) || JSONB_BUILD_OBJECT('city', kitchen_cities) AS kitchen\n            FROM\n                filtered_orders\n            INNER JOIN\n                meals\n            ON meals.id = filtered_orders.item->>'meal_id'\n            INNER JOIN\n                kitchens\n            ON kitchens.id = filtered_orders.kitchen_id\n            INNER JOIN\n                kitchen_cities\n            ON kitchen_cities.id = kitchens.city_id\n            INNER JOIN\n                users\n            ON users.id = filtered_orders.owner_id\n        )\n        SELECT\n            order_with_item.id,\n            order_with_item.status,\n            order_with_item.payment_method,\n            order_with_item.delivery_fee,\n            order_with_item.service_fee,\n            order_with_item.sub_total,\n            order_with_item.total,\n            order_with_item.delivery_address,\n            order_with_item.delivery_date,\n            order_with_item.dispatch_rider_note,\n            order_with_item.kitchen_id,\n            order_with_item.kitchen AS \"kitchen!: sqlx::types::Json<Kitchen>\",\n            order_with_item.owner_id,\n            order_with_item.owner_info AS \"owner_info!: sqlx::types::Json<OrderOwnerInfo>\",\n            order_with_item.created_at,\n            order_with_item.updated_at,\n            JSON_AGG(item) AS items\n        FROM\n            order_with_item\n        GROUP BY\n            order_with_item.id,\n            order_with_item.status,\n            order_with_item.payment_method,\n            order_with_item.delivery_fee,\n            order_with_item.service_fee,\n            order_with_item.sub_total,\n            order_with_item.total,\n            order_with_item.delivery_address,\n            order_with_item.delivery_date,\n            order_with_item.dispatch_rider_note,\n            order_with_item.kitchen_id,\n            order_with_item.kitchen,\n            order_with_item.owner_id,\n            order_with_item.owner_info,\n            order_with_item.created_at,\n            order_with_item.updated_at\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Varchar"
      },
      {
        "ordinal": 1,
        "name": "status",
        "type_info": "Varchar"
      },
      {
        "ordinal": 2,
        "name": "payment_method",
        "type_info": "Varchar"
      },
      {
        "ordinal": 3,
        "name": "delivery_fee",
        "type_info": "Numeric"
      },
      {
        "ordinal": 4,
        "name": "service_fee",
        "type_info": "Numeric"
      },
      {
        "ordinal": 5,
        "name": "sub_total",
        "type_info": "Numeric"
      },
      {
        "ordinal": 6,
        "name": "total",
        "type_info": "Numeric"
      },
      {
        "ordinal": 7,
        "name": "delivery_address",
        "type_info": "Varchar"
      },
      {
        "ordinal": 8,
        "name": "delivery_date",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 9,
        "name": "dispatch_rider_note",
        "type_info": "Varchar"
      },
      {
        "ordinal": 10,
        "name": "kitchen_id",
        "type_info": "Varchar"
      },
      {
        "ordinal": 11,
        "name": "kitchen!: sqlx::types::Json<Kitchen>",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 12,
        "name": "owner_id",
        "type_info": "Varchar"
      },
      {
        "ordinal": 13,
        "name": "owner_info!: sqlx::types::Json<OrderOwnerInfo>",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 14,
        "name": "created_at",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 15,
        "name": "updated_at",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 16,
        "name": "items",
        "type_info": "Json"
      }
    ],
    "parameters": {
      "Left": [
        "Text"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      null,
      false,
      null,
      false,
      true,
      null
    ]
  },
  "hash": "306c2acbb51dc5b2484f2e7d155493bd4d836d26d7907ca1692f62dff4eae426"
}
