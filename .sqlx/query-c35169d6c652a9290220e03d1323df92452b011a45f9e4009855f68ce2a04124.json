{
  "db_name": "PostgreSQL",
  "query": "\n            WITH ranked_results AS (\n                SELECT \n                    meals.name,\n                    'meal' AS type,\n                    SIMILARITY(meals.name, $3) AS rank_score,\n                    TO_JSONB(meals) || JSONB_BUILD_OBJECT('kitchen', kitchens) AS item\n                FROM\n                    meals\n                INNER JOIN kitchens\n                ON\n                     meals.kitchen_id = kitchens.id\n                UNION ALL\n                SELECT \n                    kitchens.name,\n                    'kitchen' AS type,\n                    SIMILARITY(kitchens.name, $3) AS rank_score,\n                    TO_JSONB(kitchens) || JSONB_BUILD_OBJECT(\n                        'city', kitchen_cities\n                    ) AS item\n                FROM\n                    kitchens\n                INNER JOIN kitchen_cities\n                ON\n                     kitchens.city_id = kitchen_cities.id\n            ),\n            filtered_results AS (\n                SELECT\n                    *\n                FROM\n                    ranked_results\n                WHERE\n                    rank_score > 0.1\n                    AND (\n                        type = 'kitchen'\n                        AND (\n                            item->'is_available' = TO_JSONB(TRUE)\n                            AND item->'is_blocked' = TO_JSONB(FALSE)\n                            AND item->'is_verified' = TO_JSONB(TRUE)\n                        )\n                        OR (\n                            type = 'meal'\n                            AND (\n                                item->'kitchen'->'is_available' = TO_JSONB(TRUE)\n                                AND item->'kitchen'->'is_blocked' = TO_JSONB(FALSE)\n                                AND item->'kitchen'->'is_verified' = TO_JSONB(TRUE)\n                            )\n                        )\n                    )\n                ORDER BY\n                    rank_score DESC,\n                    name\n            ),\n            total_count AS (\n                SELECT COUNT(name) AS total_rows FROM filtered_results\n            ),\n            truncated_results AS (\n                SELECT\n                    item\n                FROM\n                    filtered_results\n                LIMIT $2\n                OFFSET ($1 - 1) * $2\n            )\n            SELECT\n                COALESCE(JSONB_AGG(truncated_results.item), '[]'::JSONB) AS items,\n                JSONB_BUILD_OBJECT(\n                    'page', $1,\n                    'per_page', $2,\n                    'total', (SELECT total_rows FROM total_count)\n                ) AS meta\n            FROM\n                truncated_results\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "items",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 1,
        "name": "meta",
        "type_info": "Jsonb"
      }
    ],
    "parameters": {
      "Left": [
        "Int4",
        "Int4",
        "Text"
      ]
    },
    "nullable": [
      null,
      null
    ]
  },
  "hash": "c35169d6c652a9290220e03d1323df92452b011a45f9e4009855f68ce2a04124"
}
